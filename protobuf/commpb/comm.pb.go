// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: commpb/comm.proto

package commpb

import (
	commonpb "github.com/bishopfox/sliver/protobuf/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Transport-layer protocol of traffic
type Transport int32

const (
	Transport_IP  Transport = 0 // IP is put here as it may be treated as a PacketConn just like UDP.
	Transport_TCP Transport = 1
	Transport_UDP Transport = 2
)

// Enum value maps for Transport.
var (
	Transport_name = map[int32]string{
		0: "IP",
		1: "TCP",
		2: "UDP",
	}
	Transport_value = map[string]int32{
		"IP":  0,
		"TCP": 1,
		"UDP": 2,
	}
)

func (x Transport) Enum() *Transport {
	p := new(Transport)
	*p = x
	return p
}

func (x Transport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transport) Descriptor() protoreflect.EnumDescriptor {
	return file_commpb_comm_proto_enumTypes[0].Descriptor()
}

func (Transport) Type() protoreflect.EnumType {
	return &file_commpb_comm_proto_enumTypes[0]
}

func (x Transport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transport.Descriptor instead.
func (Transport) EnumDescriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{0}
}

// Application-layer protocol of traffic
type Application int32

const (
	Application_HTTP      Application = 0
	Application_HTTPS     Application = 1
	Application_DNS       Application = 2
	Application_QUIC      Application = 3
	Application_NamedPipe Application = 4
	Application_FTP       Application = 5
	Application_SMTP      Application = 6
	Application_Socks5    Application = 7
	Application_MTLS      Application = 10
	Application_None      Application = 11
)

// Enum value maps for Application.
var (
	Application_name = map[int32]string{
		0:  "HTTP",
		1:  "HTTPS",
		2:  "DNS",
		3:  "QUIC",
		4:  "NamedPipe",
		5:  "FTP",
		6:  "SMTP",
		7:  "Socks5",
		10: "MTLS",
		11: "None",
	}
	Application_value = map[string]int32{
		"HTTP":      0,
		"HTTPS":     1,
		"DNS":       2,
		"QUIC":      3,
		"NamedPipe": 4,
		"FTP":       5,
		"SMTP":      6,
		"Socks5":    7,
		"MTLS":      10,
		"None":      11,
	}
)

func (x Application) Enum() *Application {
	p := new(Application)
	*p = x
	return p
}

func (x Application) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Application) Descriptor() protoreflect.EnumDescriptor {
	return file_commpb_comm_proto_enumTypes[1].Descriptor()
}

func (Application) Type() protoreflect.EnumType {
	return &file_commpb_comm_proto_enumTypes[1]
}

func (x Application) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Application.Descriptor instead.
func (Application) EnumDescriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{1}
}

// Request - The Comm system can internally make requests to either:
// - Open channels (streams), which yield one if accepted.
// - Asynchronously request the server-side Comm to setup a port forwarder or any handler.
type Request int32

const (
	Request_RouteConn     Request = 0 // Client wants a stream to be routed.
	Request_PortfwdStream Request = 1 // Client wants to route a stream through a forwarder
	Request_PortfwdStart  Request = 2 // (No stream) client wants to add a forwarder.
	Request_PortfwdStop   Request = 3 // (No stream) client wants to close a forwarder.
	Request_HandlerOpen   Request = 4 // Reverse handlers (TCP/UDP listener on implant)
	Request_HandlerStop   Request = 5 // Kill revers handler
)

// Enum value maps for Request.
var (
	Request_name = map[int32]string{
		0: "RouteConn",
		1: "PortfwdStream",
		2: "PortfwdStart",
		3: "PortfwdStop",
		4: "HandlerOpen",
		5: "HandlerStop",
	}
	Request_value = map[string]int32{
		"RouteConn":     0,
		"PortfwdStream": 1,
		"PortfwdStart":  2,
		"PortfwdStop":   3,
		"HandlerOpen":   4,
		"HandlerStop":   5,
	}
)

func (x Request) Enum() *Request {
	p := new(Request)
	*p = x
	return p
}

func (x Request) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Request) Descriptor() protoreflect.EnumDescriptor {
	return file_commpb_comm_proto_enumTypes[2].Descriptor()
}

func (Request) Type() protoreflect.EnumType {
	return &file_commpb_comm_proto_enumTypes[2]
}

func (x Request) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Request.Descriptor instead.
func (Request) EnumDescriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{2}
}

// Handler direction
type HandlerType int32

const (
	HandlerType_Bind    HandlerType = 0
	HandlerType_Reverse HandlerType = 1
)

// Enum value maps for HandlerType.
var (
	HandlerType_name = map[int32]string{
		0: "Bind",
		1: "Reverse",
	}
	HandlerType_value = map[string]int32{
		"Bind":    0,
		"Reverse": 1,
	}
)

func (x HandlerType) Enum() *HandlerType {
	p := new(HandlerType)
	*p = x
	return p
}

func (x HandlerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HandlerType) Descriptor() protoreflect.EnumDescriptor {
	return file_commpb_comm_proto_enumTypes[3].Descriptor()
}

func (HandlerType) Type() protoreflect.EnumType {
	return &file_commpb_comm_proto_enumTypes[3]
}

func (x HandlerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HandlerType.Descriptor instead.
func (HandlerType) EnumDescriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{3}
}

// Bytes - Data passed inside of a Comm tunnel between a client console and the server.
type Bytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *Bytes) Reset() {
	*x = Bytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bytes) ProtoMessage() {}

func (x *Bytes) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bytes.ProtoReflect.Descriptor instead.
func (*Bytes) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{0}
}

func (x *Bytes) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Start a tunnel between the Server and an Implant, through the session RPC stack
// (DNS/HTTPS/MTLS/anything), inside of which to set the Comm system.
type TunnelOpenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelID uint64            `protobuf:"varint,1,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TunnelOpenReq) Reset() {
	*x = TunnelOpenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelOpenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelOpenReq) ProtoMessage() {}

func (x *TunnelOpenReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelOpenReq.ProtoReflect.Descriptor instead.
func (*TunnelOpenReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{1}
}

func (x *TunnelOpenReq) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *TunnelOpenReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TunnelOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TunnelOpen) Reset() {
	*x = TunnelOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelOpen) ProtoMessage() {}

func (x *TunnelOpen) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelOpen.ProtoReflect.Descriptor instead.
func (*TunnelOpen) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{2}
}

func (x *TunnelOpen) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TunnelOpen) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Pass data inside of a Comm tunnel
type TunnelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Closed    bool   `protobuf:"varint,2,opt,name=Closed,proto3" json:"Closed,omitempty"`
	Sequence  uint64 `protobuf:"varint,3,opt,name=Sequence,proto3" json:"Sequence,omitempty"`
	TunnelID  uint64 `protobuf:"varint,8,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	SessionID uint32 `protobuf:"varint,9,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
}

func (x *TunnelData) Reset() {
	*x = TunnelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelData) ProtoMessage() {}

func (x *TunnelData) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelData.ProtoReflect.Descriptor instead.
func (*TunnelData) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{3}
}

func (x *TunnelData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TunnelData) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

func (x *TunnelData) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *TunnelData) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *TunnelData) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

// Close a Comm tunnel (a Comm, by extension)
type TunnelCloseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TunnelID uint64            `protobuf:"varint,1,opt,name=TunnelID,proto3" json:"TunnelID,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TunnelCloseReq) Reset() {
	*x = TunnelCloseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelCloseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelCloseReq) ProtoMessage() {}

func (x *TunnelCloseReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelCloseReq.ProtoReflect.Descriptor instead.
func (*TunnelCloseReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{4}
}

func (x *TunnelCloseReq) GetTunnelID() uint64 {
	if x != nil {
		return x.TunnelID
	}
	return 0
}

func (x *TunnelCloseReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TunnelClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TunnelClose) Reset() {
	*x = TunnelClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunnelClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunnelClose) ProtoMessage() {}

func (x *TunnelClose) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunnelClose.ProtoReflect.Descriptor instead.
func (*TunnelClose) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{5}
}

func (x *TunnelClose) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TunnelClose) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Conn - Each connection to be routed forward/reverse in the Comms is passed
// in a stream, the latter passes along all information pertaining to this connection.
type Conn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Transport   Transport   `protobuf:"varint,2,opt,name=Transport,proto3,enum=commpb.Transport" json:"Transport,omitempty"`
	Application Application `protobuf:"varint,3,opt,name=Application,proto3,enum=commpb.Application" json:"Application,omitempty"`
	RHost       string      `protobuf:"bytes,4,opt,name=RHost,proto3" json:"RHost,omitempty"`
	RPort       int32       `protobuf:"varint,5,opt,name=RPort,proto3" json:"RPort,omitempty"`
	LHost       string      `protobuf:"bytes,6,opt,name=LHost,proto3" json:"LHost,omitempty"`
	LPort       int32       `protobuf:"varint,7,opt,name=LPort,proto3" json:"LPort,omitempty"`
	Timeout     int64       `protobuf:"varint,8,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *Conn) Reset() {
	*x = Conn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conn) ProtoMessage() {}

func (x *Conn) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conn.ProtoReflect.Descriptor instead.
func (*Conn) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{6}
}

func (x *Conn) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Conn) GetTransport() Transport {
	if x != nil {
		return x.Transport
	}
	return Transport_IP
}

func (x *Conn) GetApplication() Application {
	if x != nil {
		return x.Application
	}
	return Application_HTTP
}

func (x *Conn) GetRHost() string {
	if x != nil {
		return x.RHost
	}
	return ""
}

func (x *Conn) GetRPort() int32 {
	if x != nil {
		return x.RPort
	}
	return 0
}

func (x *Conn) GetLHost() string {
	if x != nil {
		return x.LHost
	}
	return ""
}

func (x *Conn) GetLPort() int32 {
	if x != nil {
		return x.LPort
	}
	return 0
}

func (x *Conn) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// A network handler that is being used by implants to get necessary
// handler information, including more specific details. This helps reducing the
// number of handlers to add for an implant, and only a packge will handle these.
//
// The handler is used in several cases:
// - To start reverse/bind port forwarders,
// - API-used listeners/dialers.
// Consequently this type is used across client/server/implant packages, even
// if the client considers it "a port forwarder", when the implant has no such notion.
type Handler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           string        `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                                            // Always has an ID , provided by the server.
	Type         HandlerType   `protobuf:"varint,2,opt,name=Type,proto3,enum=commpb.HandlerType" json:"Type,omitempty"`               // May be used also for portfwds
	Transport    Transport     `protobuf:"varint,3,opt,name=Transport,proto3,enum=commpb.Transport" json:"Transport,omitempty"`       // Transport-layer protocol
	Application  Application   `protobuf:"varint,4,opt,name=Application,proto3,enum=commpb.Application" json:"Application,omitempty"` // Application-layer protocol, may be empty.
	RHost        string        `protobuf:"bytes,5,opt,name=RHost,proto3" json:"RHost,omitempty"`
	RPort        int32         `protobuf:"varint,6,opt,name=RPort,proto3" json:"RPort,omitempty"`
	LHost        string        `protobuf:"bytes,7,opt,name=LHost,proto3" json:"LHost,omitempty"`
	LPort        int32         `protobuf:"varint,8,opt,name=LPort,proto3" json:"LPort,omitempty"`
	Certificates *Certificates `protobuf:"bytes,9,opt,name=Certificates,proto3" json:"Certificates,omitempty"` // Any certificates needed by the handler.
}

func (x *Handler) Reset() {
	*x = Handler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handler) ProtoMessage() {}

func (x *Handler) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handler.ProtoReflect.Descriptor instead.
func (*Handler) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{7}
}

func (x *Handler) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Handler) GetType() HandlerType {
	if x != nil {
		return x.Type
	}
	return HandlerType_Bind
}

func (x *Handler) GetTransport() Transport {
	if x != nil {
		return x.Transport
	}
	return Transport_IP
}

func (x *Handler) GetApplication() Application {
	if x != nil {
		return x.Application
	}
	return Application_HTTP
}

func (x *Handler) GetRHost() string {
	if x != nil {
		return x.RHost
	}
	return ""
}

func (x *Handler) GetRPort() int32 {
	if x != nil {
		return x.RPort
	}
	return 0
}

func (x *Handler) GetLHost() string {
	if x != nil {
		return x.LHost
	}
	return ""
}

func (x *Handler) GetLPort() int32 {
	if x != nil {
		return x.LPort
	}
	return 0
}

func (x *Handler) GetCertificates() *Certificates {
	if x != nil {
		return x.Certificates
	}
	return nil
}

// Any security details, such as encryption keys and auth.
type Certificates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CACertPEM []byte `protobuf:"bytes,4,opt,name=CACertPEM,proto3" json:"CACertPEM,omitempty"`
	CertPEM   []byte `protobuf:"bytes,5,opt,name=CertPEM,proto3" json:"CertPEM,omitempty"`
	KeyPEM    []byte `protobuf:"bytes,6,opt,name=KeyPEM,proto3" json:"KeyPEM,omitempty"`
}

func (x *Certificates) Reset() {
	*x = Certificates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificates) ProtoMessage() {}

func (x *Certificates) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificates.ProtoReflect.Descriptor instead.
func (*Certificates) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{8}
}

func (x *Certificates) GetCACertPEM() []byte {
	if x != nil {
		return x.CACertPEM
	}
	return nil
}

func (x *Certificates) GetCertPEM() []byte {
	if x != nil {
		return x.CertPEM
	}
	return nil
}

func (x *Certificates) GetKeyPEM() []byte {
	if x != nil {
		return x.KeyPEM
	}
	return nil
}

// The server requests an implant/the server to start a handler.
type HandlerStartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handler *Handler          `protobuf:"bytes,1,opt,name=Handler,proto3" json:"Handler,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *HandlerStartReq) Reset() {
	*x = HandlerStartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlerStartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerStartReq) ProtoMessage() {}

func (x *HandlerStartReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlerStartReq.ProtoReflect.Descriptor instead.
func (*HandlerStartReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{9}
}

func (x *HandlerStartReq) GetHandler() *Handler {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *HandlerStartReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type HandlerStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success              bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	IsPlatformCompatible bool               `protobuf:"varint,2,opt,name=IsPlatformCompatible,proto3" json:"IsPlatformCompatible,omitempty"`
	Response             *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *HandlerStart) Reset() {
	*x = HandlerStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlerStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerStart) ProtoMessage() {}

func (x *HandlerStart) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlerStart.ProtoReflect.Descriptor instead.
func (*HandlerStart) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{10}
}

func (x *HandlerStart) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HandlerStart) GetIsPlatformCompatible() bool {
	if x != nil {
		return x.IsPlatformCompatible
	}
	return false
}

func (x *HandlerStart) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// The server requests an implant/the server to stop a handler.
type HandlerCloseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handler *Handler          `protobuf:"bytes,1,opt,name=Handler,proto3" json:"Handler,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *HandlerCloseReq) Reset() {
	*x = HandlerCloseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlerCloseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerCloseReq) ProtoMessage() {}

func (x *HandlerCloseReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlerCloseReq.ProtoReflect.Descriptor instead.
func (*HandlerCloseReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{11}
}

func (x *HandlerCloseReq) GetHandler() *Handler {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *HandlerCloseReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type HandlerClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success              bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	IsPlatformCompatible bool               `protobuf:"varint,2,opt,name=IsPlatformCompatible,proto3" json:"IsPlatformCompatible,omitempty"`
	Response             *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *HandlerClose) Reset() {
	*x = HandlerClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandlerClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandlerClose) ProtoMessage() {}

func (x *HandlerClose) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandlerClose.ProtoReflect.Descriptor instead.
func (*HandlerClose) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{12}
}

func (x *HandlerClose) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HandlerClose) GetIsPlatformCompatible() bool {
	if x != nil {
		return x.IsPlatformCompatible
	}
	return false
}

func (x *HandlerClose) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Route - A network route that is/could be available to an implant session.
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	IP          string  `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	IPNet       string  `protobuf:"bytes,3,opt,name=IPNet,proto3" json:"IPNet,omitempty"`
	Mask        string  `protobuf:"bytes,4,opt,name=Mask,proto3" json:"Mask,omitempty"`
	Gateway     *Node   `protobuf:"bytes,5,opt,name=Gateway,proto3" json:"Gateway,omitempty"`
	Nodes       []*Node `protobuf:"bytes,6,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
	Connections []*Conn `protobuf:"bytes,7,rep,name=Connections,proto3" json:"Connections,omitempty"`
	SessionID   uint32  `protobuf:"varint,8,opt,name=SessionID,proto3" json:"SessionID,omitempty"` // Used by consoles to specify.
	Timeout     int64   `protobuf:"varint,9,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{13}
}

func (x *Route) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Route) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *Route) GetIPNet() string {
	if x != nil {
		return x.IPNet
	}
	return ""
}

func (x *Route) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

func (x *Route) GetGateway() *Node {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *Route) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Route) GetConnections() []*Conn {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *Route) GetSessionID() uint32 {
	if x != nil {
		return x.SessionID
	}
	return 0
}

func (x *Route) GetTimeout() int64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Host     string `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	Hostname string `protobuf:"bytes,4,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{14}
}

func (x *Node) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Node) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// Get the network routes
type RoutesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    string            `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RoutesReq) Reset() {
	*x = RoutesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutesReq) ProtoMessage() {}

func (x *RoutesReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutesReq.ProtoReflect.Descriptor instead.
func (*RoutesReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{15}
}

func (x *RoutesReq) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RoutesReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Routes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active []*Route `protobuf:"bytes,1,rep,name=Active,proto3" json:"Active,omitempty"`
}

func (x *Routes) Reset() {
	*x = Routes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routes) ProtoMessage() {}

func (x *Routes) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routes.ProtoReflect.Descriptor instead.
func (*Routes) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{16}
}

func (x *Routes) GetActive() []*Route {
	if x != nil {
		return x.Active
	}
	return nil
}

// Add a network route
type RouteAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route   *Route            `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RouteAddReq) Reset() {
	*x = RouteAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteAddReq) ProtoMessage() {}

func (x *RouteAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteAddReq.ProtoReflect.Descriptor instead.
func (*RouteAddReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{17}
}

func (x *RouteAddReq) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RouteAddReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RouteAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RouteAdd) Reset() {
	*x = RouteAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteAdd) ProtoMessage() {}

func (x *RouteAdd) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteAdd.ProtoReflect.Descriptor instead.
func (*RouteAdd) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{18}
}

func (x *RouteAdd) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RouteAdd) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Remove a network route
type RouteDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route   *Route            `protobuf:"bytes,1,opt,name=Route,proto3" json:"Route,omitempty"`
	Close   bool              `protobuf:"varint,2,opt,name=Close,proto3" json:"Close,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RouteDeleteReq) Reset() {
	*x = RouteDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDeleteReq) ProtoMessage() {}

func (x *RouteDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDeleteReq.ProtoReflect.Descriptor instead.
func (*RouteDeleteReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{19}
}

func (x *RouteDeleteReq) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RouteDeleteReq) GetClose() bool {
	if x != nil {
		return x.Close
	}
	return false
}

func (x *RouteDeleteReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RouteDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	CloseError string             `protobuf:"bytes,2,opt,name=CloseError,proto3" json:"CloseError,omitempty"`
	Response   *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RouteDelete) Reset() {
	*x = RouteDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteDelete) ProtoMessage() {}

func (x *RouteDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteDelete.ProtoReflect.Descriptor instead.
func (*RouteDelete) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{20}
}

func (x *RouteDelete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RouteDelete) GetCloseError() string {
	if x != nil {
		return x.CloseError
	}
	return ""
}

func (x *RouteDelete) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type PortfwdOpenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handler *Handler          `protobuf:"bytes,1,opt,name=Handler,proto3" json:"Handler,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PortfwdOpenReq) Reset() {
	*x = PortfwdOpenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfwdOpenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfwdOpenReq) ProtoMessage() {}

func (x *PortfwdOpenReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfwdOpenReq.ProtoReflect.Descriptor instead.
func (*PortfwdOpenReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{21}
}

func (x *PortfwdOpenReq) GetHandler() *Handler {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *PortfwdOpenReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type PortfwdOpen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *PortfwdOpen) Reset() {
	*x = PortfwdOpen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfwdOpen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfwdOpen) ProtoMessage() {}

func (x *PortfwdOpen) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfwdOpen.ProtoReflect.Descriptor instead.
func (*PortfwdOpen) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{22}
}

func (x *PortfwdOpen) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PortfwdOpen) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type PortfwdCloseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Handler *Handler          `protobuf:"bytes,1,opt,name=Handler,proto3" json:"Handler,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *PortfwdCloseReq) Reset() {
	*x = PortfwdCloseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfwdCloseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfwdCloseReq) ProtoMessage() {}

func (x *PortfwdCloseReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfwdCloseReq.ProtoReflect.Descriptor instead.
func (*PortfwdCloseReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{23}
}

func (x *PortfwdCloseReq) GetHandler() *Handler {
	if x != nil {
		return x.Handler
	}
	return nil
}

func (x *PortfwdCloseReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type PortfwdClose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *PortfwdClose) Reset() {
	*x = PortfwdClose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfwdClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfwdClose) ProtoMessage() {}

func (x *PortfwdClose) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfwdClose.ProtoReflect.Descriptor instead.
func (*PortfwdClose) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{24}
}

func (x *PortfwdClose) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PortfwdClose) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TransportC2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL      string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Priority uint32 `protobuf:"varint,3,opt,name=Priority,proto3" json:"Priority,omitempty"`
	Options  string `protobuf:"bytes,4,opt,name=Options,proto3" json:"Options,omitempty"` // Protocol specific options
}

func (x *TransportC2) Reset() {
	*x = TransportC2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportC2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportC2) ProtoMessage() {}

func (x *TransportC2) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportC2.ProtoReflect.Descriptor instead.
func (*TransportC2) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{25}
}

func (x *TransportC2) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TransportC2) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TransportC2) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TransportC2) GetOptions() string {
	if x != nil {
		return x.Options
	}
	return ""
}

type TransportsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TransportsReq) Reset() {
	*x = TransportsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportsReq) ProtoMessage() {}

func (x *TransportsReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportsReq.ProtoReflect.Descriptor instead.
func (*TransportsReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{26}
}

func (x *TransportsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Transports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Available []*TransportC2     `protobuf:"bytes,1,rep,name=Available,proto3" json:"Available,omitempty"`
	Response  *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Transports) Reset() {
	*x = Transports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transports) ProtoMessage() {}

func (x *Transports) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transports.ProtoReflect.Descriptor instead.
func (*Transports) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{27}
}

func (x *Transports) GetAvailable() []*TransportC2 {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *Transports) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TransportAddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL      string            `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Priority int32             `protobuf:"varint,2,opt,name=Priority,proto3" json:"Priority,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TransportAddReq) Reset() {
	*x = TransportAddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportAddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportAddReq) ProtoMessage() {}

func (x *TransportAddReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportAddReq.ProtoReflect.Descriptor instead.
func (*TransportAddReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{28}
}

func (x *TransportAddReq) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TransportAddReq) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TransportAddReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TransportAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TransportAdd) Reset() {
	*x = TransportAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportAdd) ProtoMessage() {}

func (x *TransportAdd) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportAdd.ProtoReflect.Descriptor instead.
func (*TransportAdd) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{29}
}

func (x *TransportAdd) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransportAdd) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TransportDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      uint32            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL     string            `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TransportDeleteReq) Reset() {
	*x = TransportDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportDeleteReq) ProtoMessage() {}

func (x *TransportDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportDeleteReq.ProtoReflect.Descriptor instead.
func (*TransportDeleteReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{30}
}

func (x *TransportDeleteReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TransportDeleteReq) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TransportDeleteReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TransportDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TransportDelete) Reset() {
	*x = TransportDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportDelete) ProtoMessage() {}

func (x *TransportDelete) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportDelete.ProtoReflect.Descriptor instead.
func (*TransportDelete) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{31}
}

func (x *TransportDelete) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransportDelete) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type TransportSwitchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      uint32            `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL     string            `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TransportSwitchReq) Reset() {
	*x = TransportSwitchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportSwitchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportSwitchReq) ProtoMessage() {}

func (x *TransportSwitchReq) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportSwitchReq.ProtoReflect.Descriptor instead.
func (*TransportSwitchReq) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{32}
}

func (x *TransportSwitchReq) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *TransportSwitchReq) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *TransportSwitchReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type TransportSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool               `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *TransportSwitch) Reset() {
	*x = TransportSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_commpb_comm_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportSwitch) ProtoMessage() {}

func (x *TransportSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_commpb_comm_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportSwitch.ProtoReflect.Descriptor instead.
func (*TransportSwitch) Descriptor() ([]byte, []int) {
	return file_commpb_comm_proto_rawDescGZIP(), []int{33}
}

func (x *TransportSwitch) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransportSwitch) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_commpb_comm_proto protoreflect.FileDescriptor

var file_commpb_comm_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x05, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x58, 0x0a, 0x0d, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x0a, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x92, 0x01, 0x0a, 0x0a, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x08,
	0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x59, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x54, 0x75, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x57, 0x0a, 0x0b, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x04, 0x43,
	0x6f, 0x6e, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x4c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0xbc, 0x02,
	0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62,
	0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x48,
	0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4c, 0x50, 0x6f,
	0x72, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70,
	0x62, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0c,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x0c,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x50, 0x45, 0x4d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x43, 0x41, 0x43, 0x65, 0x72, 0x74, 0x50, 0x45, 0x4d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x65,
	0x72, 0x74, 0x50, 0x45, 0x4d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x43, 0x65, 0x72,
	0x74, 0x50, 0x45, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x4b, 0x65, 0x79, 0x50, 0x45, 0x4d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4b, 0x65, 0x79, 0x50, 0x45, 0x4d, 0x22, 0x69, 0x0a, 0x0f,
	0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x29, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x49, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x0f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x07, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x8c, 0x01, 0x0a, 0x0c, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x14,
	0x49, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x49, 0x73, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x85, 0x02, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x50, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x50,
	0x4e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x50, 0x4e, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4d, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x0a, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x22, 0x0a, 0x05,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x5a, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x2f, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x22, 0x5f, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x12, 0x23, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x08, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x64, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x05,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a,
	0x0e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x29, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x52, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x77, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x69, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77, 0x64, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x0c, 0x50,
	0x6f, 0x72, 0x74, 0x66, 0x77, 0x64, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x43, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3c, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x32,
	0x52, 0x09, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x0c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x63, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55,
	0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x25, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x50, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x54, 0x43, 0x50, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x02, 0x2a, 0x77,
	0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a,
	0x04, 0x48, 0x54, 0x54, 0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x53,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x51,
	0x55, 0x49, 0x43, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x50, 0x69,
	0x70, 0x65, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x54, 0x50, 0x10, 0x05, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x4d, 0x54, 0x50, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x6b, 0x73,
	0x35, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x54, 0x4c, 0x53, 0x10, 0x0a, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x0b, 0x2a, 0x70, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77, 0x64, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x77,
	0x64, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x10, 0x05, 0x2a, 0x24, 0x0a, 0x0b, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x10, 0x01, 0x42,
	0x7c, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x42, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x66, 0x6f, 0x78,
	0x2f, 0x73, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x06,
	0x43, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0xca, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0xe2,
	0x02, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_commpb_comm_proto_rawDescOnce sync.Once
	file_commpb_comm_proto_rawDescData = file_commpb_comm_proto_rawDesc
)

func file_commpb_comm_proto_rawDescGZIP() []byte {
	file_commpb_comm_proto_rawDescOnce.Do(func() {
		file_commpb_comm_proto_rawDescData = protoimpl.X.CompressGZIP(file_commpb_comm_proto_rawDescData)
	})
	return file_commpb_comm_proto_rawDescData
}

var file_commpb_comm_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_commpb_comm_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_commpb_comm_proto_goTypes = []interface{}{
	(Transport)(0),             // 0: commpb.Transport
	(Application)(0),           // 1: commpb.Application
	(Request)(0),               // 2: commpb.Request
	(HandlerType)(0),           // 3: commpb.HandlerType
	(*Bytes)(nil),              // 4: commpb.Bytes
	(*TunnelOpenReq)(nil),      // 5: commpb.TunnelOpenReq
	(*TunnelOpen)(nil),         // 6: commpb.TunnelOpen
	(*TunnelData)(nil),         // 7: commpb.TunnelData
	(*TunnelCloseReq)(nil),     // 8: commpb.TunnelCloseReq
	(*TunnelClose)(nil),        // 9: commpb.TunnelClose
	(*Conn)(nil),               // 10: commpb.Conn
	(*Handler)(nil),            // 11: commpb.Handler
	(*Certificates)(nil),       // 12: commpb.Certificates
	(*HandlerStartReq)(nil),    // 13: commpb.HandlerStartReq
	(*HandlerStart)(nil),       // 14: commpb.HandlerStart
	(*HandlerCloseReq)(nil),    // 15: commpb.HandlerCloseReq
	(*HandlerClose)(nil),       // 16: commpb.HandlerClose
	(*Route)(nil),              // 17: commpb.Route
	(*Node)(nil),               // 18: commpb.Node
	(*RoutesReq)(nil),          // 19: commpb.RoutesReq
	(*Routes)(nil),             // 20: commpb.Routes
	(*RouteAddReq)(nil),        // 21: commpb.RouteAddReq
	(*RouteAdd)(nil),           // 22: commpb.RouteAdd
	(*RouteDeleteReq)(nil),     // 23: commpb.RouteDeleteReq
	(*RouteDelete)(nil),        // 24: commpb.RouteDelete
	(*PortfwdOpenReq)(nil),     // 25: commpb.PortfwdOpenReq
	(*PortfwdOpen)(nil),        // 26: commpb.PortfwdOpen
	(*PortfwdCloseReq)(nil),    // 27: commpb.PortfwdCloseReq
	(*PortfwdClose)(nil),       // 28: commpb.PortfwdClose
	(*TransportC2)(nil),        // 29: commpb.TransportC2
	(*TransportsReq)(nil),      // 30: commpb.TransportsReq
	(*Transports)(nil),         // 31: commpb.Transports
	(*TransportAddReq)(nil),    // 32: commpb.TransportAddReq
	(*TransportAdd)(nil),       // 33: commpb.TransportAdd
	(*TransportDeleteReq)(nil), // 34: commpb.TransportDeleteReq
	(*TransportDelete)(nil),    // 35: commpb.TransportDelete
	(*TransportSwitchReq)(nil), // 36: commpb.TransportSwitchReq
	(*TransportSwitch)(nil),    // 37: commpb.TransportSwitch
	(*commonpb.Request)(nil),   // 38: commonpb.Request
	(*commonpb.Response)(nil),  // 39: commonpb.Response
}
var file_commpb_comm_proto_depIdxs = []int32{
	38, // 0: commpb.TunnelOpenReq.Request:type_name -> commonpb.Request
	39, // 1: commpb.TunnelOpen.Response:type_name -> commonpb.Response
	38, // 2: commpb.TunnelCloseReq.Request:type_name -> commonpb.Request
	39, // 3: commpb.TunnelClose.Response:type_name -> commonpb.Response
	0,  // 4: commpb.Conn.Transport:type_name -> commpb.Transport
	1,  // 5: commpb.Conn.Application:type_name -> commpb.Application
	3,  // 6: commpb.Handler.Type:type_name -> commpb.HandlerType
	0,  // 7: commpb.Handler.Transport:type_name -> commpb.Transport
	1,  // 8: commpb.Handler.Application:type_name -> commpb.Application
	12, // 9: commpb.Handler.Certificates:type_name -> commpb.Certificates
	11, // 10: commpb.HandlerStartReq.Handler:type_name -> commpb.Handler
	38, // 11: commpb.HandlerStartReq.Request:type_name -> commonpb.Request
	39, // 12: commpb.HandlerStart.Response:type_name -> commonpb.Response
	11, // 13: commpb.HandlerCloseReq.Handler:type_name -> commpb.Handler
	38, // 14: commpb.HandlerCloseReq.Request:type_name -> commonpb.Request
	39, // 15: commpb.HandlerClose.Response:type_name -> commonpb.Response
	18, // 16: commpb.Route.Gateway:type_name -> commpb.Node
	18, // 17: commpb.Route.Nodes:type_name -> commpb.Node
	10, // 18: commpb.Route.Connections:type_name -> commpb.Conn
	38, // 19: commpb.RoutesReq.Request:type_name -> commonpb.Request
	17, // 20: commpb.Routes.Active:type_name -> commpb.Route
	17, // 21: commpb.RouteAddReq.Route:type_name -> commpb.Route
	38, // 22: commpb.RouteAddReq.Request:type_name -> commonpb.Request
	39, // 23: commpb.RouteAdd.Response:type_name -> commonpb.Response
	17, // 24: commpb.RouteDeleteReq.Route:type_name -> commpb.Route
	38, // 25: commpb.RouteDeleteReq.Request:type_name -> commonpb.Request
	39, // 26: commpb.RouteDelete.Response:type_name -> commonpb.Response
	11, // 27: commpb.PortfwdOpenReq.Handler:type_name -> commpb.Handler
	38, // 28: commpb.PortfwdOpenReq.Request:type_name -> commonpb.Request
	39, // 29: commpb.PortfwdOpen.Response:type_name -> commonpb.Response
	11, // 30: commpb.PortfwdCloseReq.Handler:type_name -> commpb.Handler
	38, // 31: commpb.PortfwdCloseReq.Request:type_name -> commonpb.Request
	39, // 32: commpb.PortfwdClose.Response:type_name -> commonpb.Response
	38, // 33: commpb.TransportsReq.Request:type_name -> commonpb.Request
	29, // 34: commpb.Transports.Available:type_name -> commpb.TransportC2
	39, // 35: commpb.Transports.Response:type_name -> commonpb.Response
	38, // 36: commpb.TransportAddReq.Request:type_name -> commonpb.Request
	39, // 37: commpb.TransportAdd.Response:type_name -> commonpb.Response
	38, // 38: commpb.TransportDeleteReq.Request:type_name -> commonpb.Request
	39, // 39: commpb.TransportDelete.Response:type_name -> commonpb.Response
	38, // 40: commpb.TransportSwitchReq.Request:type_name -> commonpb.Request
	39, // 41: commpb.TransportSwitch.Response:type_name -> commonpb.Response
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_commpb_comm_proto_init() }
func file_commpb_comm_proto_init() {
	if File_commpb_comm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_commpb_comm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelOpenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelCloseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunnelClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlerStartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlerStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlerCloseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandlerClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfwdOpenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfwdOpen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfwdCloseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfwdClose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportC2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportAddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportSwitchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_commpb_comm_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_commpb_comm_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_commpb_comm_proto_goTypes,
		DependencyIndexes: file_commpb_comm_proto_depIdxs,
		EnumInfos:         file_commpb_comm_proto_enumTypes,
		MessageInfos:      file_commpb_comm_proto_msgTypes,
	}.Build()
	File_commpb_comm_proto = out.File
	file_commpb_comm_proto_rawDesc = nil
	file_commpb_comm_proto_goTypes = nil
	file_commpb_comm_proto_depIdxs = nil
}
