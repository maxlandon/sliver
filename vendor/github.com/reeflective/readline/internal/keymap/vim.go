package keymap

import "github.com/reeflective/readline/inputrc"

// viinsKeys are the default keymaps in Vim Insert mode.
var viinsKeys = map[string]inputrc.Bind{
	string(inputrc.Esc): {Action: "vi-movement-mode"},
	"^M":                {Action: "accept-line"},
	"^L":                {Action: "clear-screen"},
	"^Y":                {Action: "yank"},
	"^E":                {Action: "end-of-line"},
	"^A":                {Action: "beginning-of-line"},
	"^B":                {Action: "backward-char"},
	"^F":                {Action: "forward-char"},
	"^I":                {Action: "expand-or-complete"},
	"^K":                {Action: "kill-line"},
	"^N":                {Action: "down-line-or-history"},
	"^O":                {Action: "accept-line-and-down-history"},
	"^Q":                {Action: "accept-and-infer-next-history"},
	"^P":                {Action: "up-line-or-history"},
	"^R":                {Action: "history-incremental-search-backward"},
	"^W":                {Action: "backward-kill-word"},
	"^?":                {Action: "backward-delete-char"},
	"^_":                {Action: "undo"},
	"^[R":               {Action: "vi-registers-complete"},
	"^[[3~":             {Action: "delete-char"},
	"^[[H":              {Action: "beginning-of-line"},
	"^[[F":              {Action: "end-of-line"},
	"^[[6~":             {Action: "menu-select"},
	"^[[C":              {Action: "vi-forward-char"},
	"^[[D":              {Action: "vi-backward-char"},
	"^[[3;5~":           {Action: "kill-word"},
	"^[[1;5C":           {Action: "forward-word"},
	"^[[1;5D":           {Action: "backward-word"},
	"^[[A":              {Action: "up-line-or-search"},
	"^[[B":              {Action: "down-line-or-search"},
}

// viinsKeymaps are the default keymaps in Vim Command mode.
var vicmdKeys = map[string]inputrc.Bind{
	"^A":      {Action: "switch-keyword"},
	"^L":      {Action: "clear-screen"},
	"^M":      {Action: "accept-line"},
	"^N":      {Action: "down-history"},
	"^P":      {Action: "up-history"},
	"^R":      {Action: "redo"},
	"^X":      {Action: "switch-keyword"},
	"^?":      {Action: "backward-delete-char"},
	"^[[3~":   {Action: "delete-char"},
	"^[[6~":   {Action: "down-line-or-history"},
	"^[[5~":   {Action: "up-line-or-history"},
	"^[[H":    {Action: "beginning-of-line"},
	"^[[F":    {Action: "end-of-line"},
	"^[[A":    {Action: "history-search"},
	"^[[B":    {Action: "menu-select"},
	"^[[C":    {Action: "vi-forward-char"},
	"^[[D":    {Action: "vi-backward-char"},
	"^[[3;5~": {Action: "kill-word"},
	"^[[1;5C": {Action: "forward-word"},
	"^[[1;5D": {Action: "backward-word"},
	" ":       {Action: "vi-forward-char"},
	"$":       {Action: "vi-end-of-line"},
	"%":       {Action: "vi-match-bracket"},
	"\"":      {Action: "vi-set-buffer"},
	"0":       {Action: "vi-digit-or-beginning-of-line"},
	"a":       {Action: "vi-add-next"},
	"A":       {Action: "vi-add-eol"},
	"b":       {Action: "vi-backward-word"},
	"B":       {Action: "vi-backward-blank-word"},
	"c":       {Action: "vi-change"},
	"C":       {Action: "vi-change-eol"},
	"d":       {Action: "vi-delete"},
	"D":       {Action: "vi-kill-eol"},
	"e":       {Action: "vi-forward-word-end"},
	"E":       {Action: "vi-forward-blank-word-end"},
	"gg":      {Action: "beginning-of-buffer-or-history"},
	"ge":      {Action: "vi-backward-word-end"},
	"gE":      {Action: "vi-backward-blank-word-end"},
	"gu":      {Action: "vi-down-case"},
	"gU":      {Action: "vi-up-case"},
	"f":       {Action: "vi-find-next-char"},
	"t":       {Action: "vi-find-next-char-skip"},
	"i":       {Action: "vi-insert-mode"},
	"I":       {Action: "vi-insert-bol"},
	"h":       {Action: "vi-backward-char"},
	"l":       {Action: "vi-forward-char"},
	"j":       {Action: "down-line-or-history"},
	"k":       {Action: "up-line-or-history"},
	"O":       {Action: "vi-open-line-above"},
	"o":       {Action: "vi-open-line-below"},
	"p":       {Action: "vi-put-after"},
	"P":       {Action: "vi-put-before"},
	"r":       {Action: "vi-replace-chars"},
	"R":       {Action: "vi-replace"},
	"F":       {Action: "vi-find-prev-char"},
	"T":       {Action: "vi-find-prev-char-skip"},
	"s":       {Action: "vi-substitute"},
	"u":       {Action: "undo"},
	"v":       {Action: "visual-mode"},
	"V":       {Action: "visual-line-mode"},
	"w":       {Action: "vi-forward-word"},
	"W":       {Action: "vi-forward-blank-word"},
	"x":       {Action: "vi-delete-char"},
	"X":       {Action: "vi-backward-delete-char"},
	"y":       {Action: "vi-yank"},
	"Y":       {Action: "vi-yank-whole-line"},
	"|":       {Action: "vi-goto-column"},
	"~":       {Action: "vi-swap-case"},
	"g~":      {Action: "vi-oper-swap-case"},
	"[1-9]":   {Action: "digit-argument"},
}

// viinsKeymaps are the default keymaps in Vim Operating Pending mode.
var vioppKeys = map[string]inputrc.Bind{
	string(inputrc.Esc): {Action: "vi-movement-mode"},
	"aW":                {Action: "select-a-blank-word"},
	"aa":                {Action: "select-a-shell-word"},
	"aw":                {Action: "select-a-word"},
	"iW":                {Action: "select-in-blank-word"},
	"ia":                {Action: "select-in-shell-word"},
	"iw":                {Action: "select-in-word"},
	"j":                 {Action: "down-line"},
	"k":                 {Action: "up-line"},
}

// viinsKeymaps are the default keymaps in Vim Visual mode.
var visualKeys = map[string]inputrc.Bind{
	string(inputrc.Esc): {Action: "vi-movement-mode"},
	"aW":                {Action: "select-a-blank-word"},
	"aa":                {Action: "select-a-shell-word"},
	"aw":                {Action: "select-a-word"},
	"iW":                {Action: "select-in-blank-word"},
	"ia":                {Action: "select-in-shell-word"},
	"iw":                {Action: "select-in-word"},
	"a":                 {Action: "vi-select-surround"},
	"c":                 {Action: "vi-change-to"},
	"d":                 {Action: "vi-delete-to"},
	"i":                 {Action: "vi-select-surround"},
	"j":                 {Action: "next-screen-line"},
	"k":                 {Action: "previous-screen-line"},
	"s":                 {Action: "vi-substitute"},
	"S":                 {Action: "vi-add-surround"},
	"u":                 {Action: "vi-down-case"},
	"v":                 {Action: "vi-edit-command-line"},
	"x":                 {Action: "vi-delete-to"},
	"y":                 {Action: "vi-yank-to"},
	"~":                 {Action: "vi-swap-case"},
}

// changeMovements is used for some widgets that only
// accept movement widgets as arguments (like vi-change).
var changeMovements = map[string]string{
	"$": "vi-end-of-line",
	"%": "vi-match-bracket",
	"^": "vi-first-non-blank",
	"0": "beginning-of-line",
	"b": "vi-backward-word",
	"B": "vi-backward-blank-word",
	"w": "vi-forward-word",
	"W": "vi-forward-blank-word",
	"e": "vi-forward-word-end",
	"E": "vi-forward-blank-word-end",
	"f": "vi-find-next-char",
	"F": "vi-find-prev-char",
	"t": "vi-find-next-char-skip",
	"T": "vi-find-prev-char-skip",
	"h": "vi-backward-char",
	"l": "vi-forward-char",
	"s": "vi-change-surround",
	"a": "vi-select-surround",
	"i": "vi-select-surround",
}
